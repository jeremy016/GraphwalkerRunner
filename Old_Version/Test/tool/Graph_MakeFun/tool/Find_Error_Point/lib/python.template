HEADER<{{
import requests,json,time
##
## 1) Generate python stub source code:
##    java -jar graphwalker-3.4.0-SNAPSHOT.jar source -i model.graphml python.template > model.py
##
## 2) Start graphwalker:
##    java -jar graphwalker-3.4.0-SNAPSHOT.jar online --json --service RESTFUL -m model.graphml "random(edge_coverage(100))"
##
## 3) Run the per program:
##    python model.py
##
}}>HEADER

def {LABEL}() :
    return "{LABEL}"

FOOTER<{{

fun_list=[]

with open('fun_name.txt', 'r') as file:

    for line in file:
        fun_list.append(line.strip('\n'))


fun_list_len = len(fun_list)
print 'list length : '+str(fun_list_len)

gw_url = 'http://localhost:8887/graphwalker'
t0 = time.time()
while requests.get(gw_url+'/hasNext').json()['HasNext'] == 'true' :
    
    step = requests.get(gw_url+'/getNext').json()['CurrentElementName']

    if step != '' :

        result = eval( step + "()" )

        len_before = len(fun_list)

        if result in fun_list:
        
        	fun_list.remove(result)
        
        len_after = len(fun_list)

        if len_before == len_after:
            count+=1
        else:
            count=0
        if count == fun_list_len * fun_list_len:
            print "\n=============================="
            print 'count = length * length '
            print "=============================="
            break

t1 = time.time()
total = t1-t0
print '\nSpend time:'+str(total)
print '\nerror point : '
print fun_list
}}>FOOTER
